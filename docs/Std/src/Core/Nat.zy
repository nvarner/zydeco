pub data Nat where
  | +Z()
  | +S(Nat)
end

pub def rec fn iter (A : VType) (n : Nat) (x : A) (f : U (A -> F A)) : F A =
  match n
  | +Z() -> ret x
  | +S(n') ->
    do x' <- ! iter @(A) n' x f;
    ! f x'
  end
end